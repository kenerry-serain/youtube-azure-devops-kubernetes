# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest

variables:
  ecrRepositoryPrefix: 968225077300.dkr.ecr.us-east-1.amazonaws.com
  ecrRepository: youtube/backend-application
  awsRegion: us-east-1
  eksClusterName: eks-cluster

stages:
- stage: Development
  jobs:
  - job: BackEndApplication
    steps:
      - task: UseDotNet@2
        displayName: "Installing DotNet 6.x"
        inputs:
          packageType: 'sdk'
          version: '6.x'
      - task: DotNetCoreCLI@2
        displayName: "Running DotNet Tests"
        inputs:
          command: 'test'
          projects: '**/*.csproj'
          publishTestResults: false
      - task: Docker@2
        displayName: "Building Docker Image"
        inputs:
          command: 'build'
          Dockerfile: 'src/BackEndApplication.Api/Dockerfile'
          buildContext: 'src/'
          tags: 'latest'
          arguments: '-t $(ecrRepository)'
          
      - task: ECRPushImage@1
        displayName: "Pushing Docker Image to ECR"
        inputs:
          awsCredentials: 'aws-connection'
          regionName: '$(awsRegion)'
          imageSource: 'imagename'
          sourceImageName: '$(ecrRepository)'
          repositoryName: '$(ecrRepository)'
          pushTag: '$(Build.BuildId)'
        
      - task: AWSCLI@1
        displayName: "Updating KubeConfig"
        inputs:
          awsCredentials: 'aws-connection'
          regionName: '$(awsRegion)'
          awsCommand: 'eks'
          awsSubCommand: 'update-kubeconfig'
          awsArguments: '--region $(awsRegion) --name $(eksClusterName)'
          
      - script: |
            kustomize edit set image \
            $(ecrRepositoryPrefix)/$(ecrRepository)=$(ecrRepositoryPrefix)/$(ecrRepository):$(Build.BuildId)
        workingDirectory: manifests
        displayName: "Setting New Image using Kustomize"

      - task: AWSShellScript@1
        displayName: "Deploying New Application Version on EKS"
        inputs:
          awsCredentials: 'aws-connection'
          regionName: 'us-east-1'
          scriptType: 'inline'
          inlineScript: |
            kubectl apply -k manifests