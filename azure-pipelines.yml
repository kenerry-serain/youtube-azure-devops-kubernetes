# Starter pipeline

# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest
    
variables:
  solution: "**/*.sln"
  buildConfiguration: "Release"
  awsRegion: 'us-east-1'
  ecrRepository: 'youtube/backend-application'
  dockerBuildContext: 'src/'
  dockerFilePath: 'src/BackEndApplication.Api/Dockerfile'

stages:
  - stage: DEV
    displayName: DEV
    jobs:
      - job: DevJob
        steps:
        - task: UseDotNet@2
          displayName: Install .NET 6 SDK
          inputs:
            version: '6.x'
            packageType: sdk
        - task: DotNetCoreCLI@2
          displayName: "DotNetCore - Building projects"
          inputs:
            command: "build"
            projects: "**/*.csproj"
            arguments: "--configuration $(buildConfiguration)"
        - task: DotNetCoreCLI@2
          displayName: "DotNetCore - Running Tests"
          inputs:
            command: test
            projects: "**/*Test/*.csproj"
        - task: Docker@2
          displayName: "Docker - Building Image"
          inputs:
            buildContext: $(dockerBuildContext)
            command: "build"
            Dockerfile: $(dockerFilePath)
            arguments: "-t $(ecrRepository)"
            tags: latest
        - task: ECRPushImage@1
          displayName: "AWS - Pushing image to ECR"
          inputs:
            awsCredentials: "aws-connection"
            regionName: "$(awsRegion)"
            sourceImageName: "$(ecrRepository)"
            repositoryName: "$(ecrRepository)"
            sourceImageTag: "latest"
            pushTag: $(Build.BuildNumber)
        - task: AWSCLI@1
          inputs:
            awsCredentials: 'aws-connection'
            regionName: 'us-east-1'
            awsCommand: 'eks'
            awsSubCommand: 'update-kubeconfig'
            awsArguments: '--name eks-cluster'

        - script: 'cat ~/.kube/config'
          displayName: 'Display Kubeconfig'

        - script: 'kubectl apply -k manifests/ --kubeconfig ~/.kube/config'
          displayName: 'kubectl apply'
        